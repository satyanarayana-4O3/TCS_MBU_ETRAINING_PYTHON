#shopkepper question denominations in 30,60,120 find whether transaction is succuessful or not

def is_transaction_possible(a,N):
    change30=0
    change60=0
    change120=0
    for i in range(N):
        if a[i]==30:
            change30+=1
        elif a[i]==60:
            if change30>0:
                change30-=1
            else:
                return 0
            change60+=1
        elif a[i]==120:
            if change30 > 0 and change60>0:
                change30-=1
                change60-=1
            elif change30 >=3:
                change30-=3
            else:
                return 0
                change120+=1
    return 1
N= int (input())
a=[]
for i in range(N):
    a.append(int(input()))
if is_transaction_possible(a,N)==1:
    print("transaction successful")
else:
    print("transaction unseccessfull")


#find_sum_of_even_frequency_in_string

def find_sum_of_even_frequency(string):
    sum = 0
    count = 1

    for i in range(1, len(string)):
        if string[i] == string[i-1]:
            count += 1
        else:
            if count % 2 == 0:
                sum += count
            count = 1

    # Check the count of the last character sequence
    if count % 2 == 0:
        sum += count

    return sum

input_str = input("Enter a string: ")
result = find_sum_of_even_frequency(input_str)
print("The sum of even-frequency character sequences is:", result)

#numbers game in childhood find_possible_answers

def find_possible_values(A, X):
    found = False
    for N in range(1, X + 1):
        if X == A * N:
            print(N, end="")
            found = True

    if not found:
        print("None")

    print()

if _name_ == "_main_":
    # Read input in a single line
    input_str = input("Enter two integers A and X separated by a space: ")
    A, X = map(int, input_str.split())
    find_possible_values(A, X)
